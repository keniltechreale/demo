export const ErrorMsg = {
  USER: {
    notFound: 'User not found',
    phoneAlreadyExist: 'Phone Number Already Exists',
    appleIdAlreadyExist: 'UserId Already Exists',
    emailAlreadyExist: 'Email Already Exists',
    incorrectCredentials: 'Incorrect Credentials',
    incorrectOtp: 'OTP is incorrect. Please verify and enter the correct code',
    incorrectToken: 'Incorrect Token',
    requireAuthToken: 'Require Auth Token',
    forbidden: 'Your account is temporarily inactive, please contact support for reactivation',
    sessionExpire: 'Session Expire',
    incorrectMpin: 'Incorrect MPIN',
    incorrectReferalCode: 'Invalid Referal code',
    samePassword: 'New Password cannot be the same as the old MPIN.',
    walletExist: 'Deletion Failed : This user has amount in his wallet.',
  },
  EXCEPTIONS: {
    wentWrong: 'Something Went Wrong',
    notFound: 'Data not found',
    accessToken: 'AccessToken Required',
    pincodeNotFound: 'Pincode not found',
    FileSizelimit: 'File Size out of limit',
    unexpectedFile: 'Unexpected field in request',
    noMatchDrivers: 'No matching suggestions as per location try different locations points.',
  },
  CATEGORY: {
    notFound: 'Category not found',
    alreadyExist: 'Category already exist',
    categoryDependency: 'This Vehcile Type has dependency on vehicle categories',
    priceDependency: 'This Vehcile Type has dependency on Price Management',
  },
  RIDES: {
    notFound: 'Rides not found',
    alreadyPaid: 'Rides Already been paid once',
    userBusy: 'Your last ride is still in progress. Complete your ride First!',
  },
  CAREERS: {
    notFound: 'Careers not found',
  },
  CAREERAPPLICATIONS: {
    notFound: 'Career applications not found',
  },
  RATINGS: {
    notFound: 'Rating not found',
    alreadyExist: 'Rating already exist',
  },
  PRICES: {
    notFound: 'Price not found',
    alreadyExist: 'Price already exist',
    weight: 'Weight not found',
    nightTimeRequired: 'Night start and end times are required',
  },
  CITY: {
    notFound: 'City not found',
    documentDependency: 'This City Type has dependency on documents categories',
    priceDependency: 'This City Type has dependency on Price Management',
    alreadyExist: 'City already exist',
  },
  VEHICLE: {
    notFound: 'Vehicle not found',
    alreadyExist: 'Vehicle already exist',
    notVerified: 'Documents not verified.',
  },
  EmergencyContact: {
    notFound: 'Emergency Contact not found',
    alreadyExist: 'Emergency Contact already exist',
    unauthorized: 'You are not unauthorized',
  },
  CONTACTMESSAGE: {
    notFound: 'Contact Message not found',
    alreadyReplied: 'Contact Message already replied',
  },
  LEGALCONTENT: {
    notifynotFound: 'Notification not found',
    notFound: 'Content Message not found',
  },
  BUSINESS: {
    notFound: 'Business Account not found',
    alreadyExist: 'Business Account Already Exists',
  },
  ADDRESS: {
    notFound: 'Address not found',
  },
  PINCODE: {
    notFound: 'Pincode not found',
    alreadyExist: 'Pincode already exist',
  },
  VEHICLETYPES: {
    notFound: 'Vehicle Types not found',
    alreadyExist: 'Vehicle Types already exist',
  },
  DOCUMENTS: {
    notFound: 'Documents not found',
    alreadyExist: 'Documents already exist',
  },
  CURRENCY: {
    notFound: 'Currency not found',
    alreadyExist: 'Currency already exist',
  },
  LANGUAGES: {
    notFound: 'Languages not found',
    alreadyExist: 'Languages already exist',
  },
  FAQs: {
    notFound: 'FAQs not found',
    alreadyExist: 'FAQs already exist',
  },
  TESTIMONIALS: {
    notFound: 'Testimonial not found',
  },
  BLOGS: {
    notFound: 'Testimonial not found',
  },
  FEEDBACKS: {
    notFound: 'Feedbacks not found',
    alreadyExist: 'Feedbacks already exist',
  },
  COUPONS: {
    notFound: 'Coupon not found',
    invalid: 'Please enter valid coupon code',
    alreadyExist: 'Coupon already exist',
    expired: 'Coupon is Expired',
    alreadyRedeem: 'This coupon has already been redeemed and cannot be used again.',
  },
  WALLETS: {
    notFound: 'Wallet not found',
    alreadyExist: 'Wallet already exist',
    invalidAmount: 'Transaction error: Requested transfer amount exceeds current wallet balance',
    onHoldAmount: 'Transaction error: You have a pending cashout request',
  },
  PAYMENT: {
    failed: 'Payment Failed',
    transactionNotFound: 'Transaction Not Found',
  },
  BANKACCOUNTS: {
    notFound: 'Bank Account details not found',
    invalidUser: 'Invalid User',
    alreadyExist: 'Bank Account details already exist',
  },
  CASHOUT: {
    notFound: 'Cashout Request details not found',
    alreadyExist: 'Cashout Request details already exist',
    cannotUpdate: 'Cashout Request status cannot be updated again',
    imageNotFound: 'Payment proof image missing ',
  },
  ADDITIONAL_FEES: {
    notFound: 'Additional Fee not found',
    alreadyExists: 'Additional Fee already exists',
    invalidType: 'Invalid additional fee type',
    invalidStatus: 'Invalid status for additional fee',
  },
  REFERRAL: {
    notFound: 'Referral not found',
    alreadyExist: 'Referral already exists',
    invalidCode: 'Invalid referral code',
    expired: 'Referral code has expired',
    maxUseReached: 'Referral code usage limit reached',
  },
};

export const SuccessMsg = {
  USER: {
    get: 'Users Fetch successfully',
    count: 'Dashboard details',
    login: 'Success! Youâ€™re now logged in and ready to go',
    profile: 'User Profile fetched successfully',
    logout: 'Logout successfully',
    sendOtp: 'Otp sended successfully',
    verifyOtp: 'Success! Your OTP has been verified',
    passwordUpdated: 'Password Updated successfully',
    register: 'Your account has been created successfully',
    update: 'User Updated successfully',
    country: 'Country details fetch successfully',
    referalcode: 'Found Referal code',
    mail: 'Mail sended successfully',
    delete: 'User Profile Deleted successfully',
    statistic: 'User Statistics fetched successfully',
  },
  LEGALCONTENT: {
    update: 'Legal details  Updated successfully',
    get: 'Legal details  fetched successfully',
  },
  Vehicle: {
    add: 'Vehicle added successfully',
    get: 'Vehicles details fetch successfully',
    update: 'Vehicle updated successfully',
    delete: 'Vehicle deleted successfully',
    approved: 'Documents approved successfully',
    rejected: 'Documents rejected successfully',
  },
  EmergencyContact: {
    add: 'Emergency Contact added successfully',
    get: 'Emergency Contact details fetch successfully',
    update: 'Emergency Contact updated successfully',
    delete: 'Emergency Contact deleted successfully',
  },
  REFERFRIEND: {
    get: 'Refer friend section details fetch successfully',
    update: 'Refer friend section updated successfully',
  },
  NOTIFICATIONS: {
    get: 'Notifications fetched successfully',
    update: 'Notifications updated successfully',
    delete: 'Notifications deleted successfully',
  },
  CITY: {
    add: 'City created successfully',
    get: 'City details fetch successfully',
    update: 'City updated successfully',
    delete: 'City deleted successfully',
    available: 'City is available',
    comingSoon: 'Stay tuned, it will be available soon!',
  },
  PRICES: {
    add: 'Price created successfully',
    get: 'Price details fetch successfully',
    update: 'Price updated successfully',
    delete: 'Price deleted successfully',
  },
  RATINGS: {
    add: 'Rating added successfully',
    get: 'Ratings details fetch successfully',
  },
  BUSINESS: {
    add: 'Business Account created successfully',
    get: 'Business Account details fetch successfully',
    update: 'Business Account updated successfully',
    delete: 'Business Account deleted successfully',
  },
  DRIVER: {
    dashborad: 'Dashboard data fetch successfully',
    online: 'You are now online',
    ConnectionStatus: 'Connection status changed successfully',
    checkPincode: 'Exist Pincode',
    searchDriver: 'Finding Driver for delivery',
    orderAccepted: 'Order Accepted successfully',
    orderDecline: 'Order Declined',
    documents: 'Documents List fetch successfully',
    cancelRides: 'Ride cancelled succesfully',
    addInstructions: 'Instruction sended succesfully',
  },
  CONTACTUS: {
    add: 'Contact Us created successfully',
    get: 'Contact Us details fetch successfully',
  },
  ADDRESS: {
    add: 'Address created successfully',
    get: 'Address details fetch successfully',
    update: 'Address updated successfully',
    delete: 'Address deleted successfully',
  },
  PINCODE: {
    add: 'Pincode created successfully',
    get: 'Pincode details fetch successfully',
    update: 'Pincode updated successfully',
    delete: 'Pincode deleted successfully',
  },
  DOCUMENTS: {
    add: 'Documents added successfully',
    get: 'Documents details fetch successfully',
    update: 'Documents updated successfully',
    delete: 'Documents deleted successfully',
  },
  CURRENCY: {
    add: 'Currency added successfully',
    get: 'Currency details fetch successfully',
    update: 'Currency updated successfully',
    delete: 'Currency deleted successfully',
  },
  RIDES: {
    add: 'Rides Placed successfully',
    get: 'Rides fetched successfully',
    updated: 'Rides updated successfully',
    delete: 'Rides deleted successfully',
    instructions: 'Instructions fetch successfully',
    distanceCount: 'Driver Distance fetched successfully',
  },
  VEHICLETYPES: {
    add: 'Vehicle Types created successfully',
    get: 'Vehicle Types details fetch successfully',
    update: 'Vehicle Types updated successfully',
    delete: 'Vehicle Types deleted successfully',
  },
  LANGUAGES: {
    add: 'Languages added successfully',
    get: 'Languages details fetch successfully',
    update: 'Languages updated successfully',
    delete: 'Languages deleted successfully',
  },
  FAQs: {
    add: 'FAQs added successfully',
    get: 'FAQs details fetch successfully',
    update: 'FAQs updated successfully',
    delete: 'FAQs deleted successfully',
  },
  CAREERS: {
    add: 'Careers added successfully',
    get: 'Careers details fetch successfully',
    update: 'Careers updated successfully',
    delete: 'Careers deleted successfully',
  },
  CAREERAPPLICATIONS: {
    add: 'Career application submitted successfully',
    get: 'Career applications fetched successfully',
    update: 'Career application updated successfully',
    delete: 'Career application deleted successfully',
  },
  CATEGORY: {
    add: 'Category created successfully',
    get: 'Category details fetch successfully',
    update: 'Category updated successfully',
    delete: 'Category deleted successfully',
  },
  TESTIMONIALS: {
    add: 'Testimonial created successfully',
    get: 'Testimonial details fetch successfully',
    update: 'Testimonial updated successfully',
    delete: 'Testimonial deleted successfully',
  },
  BLOGS: {
    add: 'Blogs created successfully',
    get: 'Blogs details fetch successfully',
    update: 'Blogs updated successfully',
    delete: 'Blogs deleted successfully',
  },
  FEEDBACKS: {
    add: 'Feedbacks created successfully',
    get: 'Feedbacks details fetch successfully',
    update: 'Feedbacks updated successfully',
    delete: 'Feedbacks deleted successfully',
  },
  COUPONS: {
    add: 'Coupon created successfully',
    get: 'Coupons details fetch successfully',
    update: 'Coupons updated successfully',
    delete: 'Coupons deleted successfully',
    redeem: 'Coupon redeem successfully',
  },
  WALLETS: {
    add: 'Funds Added Wallets successfully',
    get: 'Wallets details fetch successfully',
    transfer: 'Tranfered funds successfully',
    payment: 'Wallet Payment successful',
    removed: 'Wallet Amount Deduction successful',
    Addition: 'Amount Added successfully',
  },
  PAYMENT: {
    earningsHistory: 'Earning History is fetch successfully',
    success: 'Payment Successfull',
    WeeklyStatement: 'Weekly Statement details fetched successfully',
  },
  BANKACCOUNTS: {
    add: 'Bank Account details created successfully',
    get: 'Bank Account details fetch successfully',
    update: 'Bank Account details updated successfully',
    cashout: 'Request for CashOut sended successfully',
    delete: 'Bank Account details deleted successfully',
  },
  CASHOUT: {
    get: 'Cashout Request details fetch successfully',
    update: 'Cashout Request details updated successfully',
  },
  ADDITIONAL_FEES: {
    add: 'Additional Fee added successfully',
    get: 'Additional Fees fetched successfully',
    update: 'Additional Fee updated successfully',
    delete: 'Additional Fee deleted successfully',
  },
  REFERRAL: {
    add: 'Referral created successfully',
    get: 'Referrals fetched successfully',
    update: 'Referral updated successfully',
    delete: 'Referral deleted successfully',
    used: 'Referral code used successfully',
  },
};
